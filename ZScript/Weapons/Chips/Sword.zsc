extend class BusterBase {
	States {
		Chip.Sword:
			TNT1 A 0 {
				A_SpawnItemEx("SwordSlash", -8, -32, 24, 0, 0, 0, -90);	// Now it's a projectile, so it can be a small AoE thing.
				player.SetPSprite(PSP_FLASH, ResolveState("SwordBlade"));
				A_OverlayTranslation(PSP_FLASH, "Sword");
				player.SetPSprite(OverlayID(), ResolveState("SwordSwing"));
			}
		SwordBlade:
			SWSL AB 2 Bright;
			SWSL CDEE 2 Bright;
			Stop;

		SwordSwing:	// He-hey, now I can use this for a generic arm type.
			TNT1 A 0 {
				A_Overlay(5,"ChargeSoundFunction"); //Starts charge sound.
				A_Overlay(-1, "ChargeEffectFunction"); // starts charge effect
			}
			NSRD ABCDEE 2;
			TNT1 A 0 { return ResolveState("Select"); }
	}
}

class SwordSlash : Actor
{
	actor victim;
	array<actor> hitList;

	override void BeginPlay()
	{
		Super.BeginPlay();
		A_StartSound("weapons/sword");
	}
	override int SpecialMissileHit(actor victim)
	{
		if (hitList.Find(victim) == hitList.Size() && !self.victim && victim.bSHOOTABLE && victim != target && victim.bDORMANT == 0)
		{
			victim.DamageMobj(self,target,80,"MOD_CHAINSAW");
			self.A_Scream();
			hitlist.Push(victim);
		}
		return 1;
	}
	Default
	{
		Projectile;
		+RANDOMIZE
		+DONTSPLASH
		+RIPPER
		+FLATSPRITE
		DamageFunction (0);	// Damage is handled by SpecialMissileHit, so it can pierce without doing RIPPER damage.
		Radius 10;
		Height 4;
		Speed 0;
		Obituary "%o was sliced in half by %k's Sword.";
		DeathSound "weapons/hit";
	}
	States
	{
		Spawn:
			SLAS AAAABBBCCC 1;
			Stop;
	}
}