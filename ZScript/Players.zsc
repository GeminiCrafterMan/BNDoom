#include "ZScript/Chips.zsc"
class Zenny : Inventory
{
	Default
	{
		Inventory.ForbiddenTo "DoomPlayer", "ChexPlayer", "ClericPlayer", "ChickenPlayer", "FighterPlayer", "HereticPlayer", "MagePlayer", "PigPlayer", "StrifePlayer";
		Inventory.MaxAmount 999999;
	}
}

class NetNaviPlayer : PlayerPawn
{
// emotion window face sprite
	string EmotionFace;
	property EmotionFace: EmotionFace;
// style change and emotions
	int curElement; 	// field containing current element
	int curStyleType;	// field containing current style type
	int curEmotion;		// field containing current emotion
// chips are now in a seperate file to not clutter this up
// chips held this turn
	int chip1;			// Current chip
	int chip2;			// next chip
	int chip3;			// next chip
	int chip4;			// next chip
	int chip5;			// next chip
// chips selected for next turn
	int selChip1;
	int selChip2;
	int selChip3;
	int selChip4;
	int selChip5;
// An enum where each number corresponds to a position in the array of translations
	enum ElemTransValues
	{
		Elem_Normal,
		Elem_Heat,
		Elem_Wood,
		Elem_Electric,
		Elem_Aqua,
	// bugstyle and shanghai exclusive
		Elem_Ground,
		Elem_Poison,
		Elem_Extra // currently only used for you goi
	}
// emotion window values
	enum EmotionValues
	{
		Emotion_Normal,
		Emotion_FullSynchro,
		Emotion_Angry,
		Emotion_Evil,
		Emotion_Anxious,
		Emotion_Tired,
		Emotion_Exhausted,
		Emotion_Pinch,
		Emotion_PerfectSynchro,
		Emotion_Happy
	}
// the actual code
	override void PlayIdle ()
	{
		if (InStateSequence(CurState, GetRunState()))
		{
			// Switch to standing from running
			SetState(SpawnState);
		}
		else
		{
			Super.PlayIdle();
		}
	}
	override void PlayRunning ()
	{
		if (IsRunning() && (InStateSequence(CurState, SpawnState) || InStateSequence(CurState, SeeState)))
		{
			// Switch to running from standing or walking
			SetState(GetRunState());
		}
		else if (!IsRunning() && InStateSequence(CurState, GetRunState()))
		{
			// Switch to walking from running
			SetState(SeeState);
		}
		else
		{
			// Base class behavior (switches to walking from standing)
			Super.PlayRunning();
		}
	}
	private bool IsRunning()
	{
		return player != null && (player.cmd.buttons & BT_RUN);
	}
	private state GetRunState()
	{
		return ResolveState('See.Run');
	}
	Default
	{
		+NOBLOOD
		Speed 1;
		Health 100;
		Radius 16;
		Height 42;
		Mass 100;
		PainChance 256;
		Player.ViewHeight 30;
		NetNaviPlayer.EmotionFace "";
		Player.ColorRange 112, 127;
		Player.Colorset 0, "Green",			0x70, 0x7F,  0x72;
		Player.Colorset 1, "Gray",			0x60, 0x6F,  0x62;
		Player.Colorset 2, "Brown",			0x40, 0x4F,  0x42;
		Player.Colorset 3, "Red",			0x20, 0x2F,  0x22;
		// Doom Legacy additions
		Player.Colorset 4, "Light Gray",	0x58, 0x67,  0x5A;
		Player.Colorset 5, "Light Brown",	0x38, 0x47,  0x3A;
		Player.Colorset 6, "Light Red",		0xB0, 0xBF,  0xB2;
		Player.Colorset 7, "Light Blue",	0xC0, 0xCF,  0xC2;
	}
}

class MegaManPlayer : NetNaviPlayer
{
	// an array containing translation names as defined in TRNSLATE
	// Redefine this for Shanghai
	static const name ElementTranslations[] =
	{
		"MMNormStyl",
		"MMHeatStyl",
		"MMWoodStyl",
		"MMElecStyl",
		"MMAquaStyl",
	// these are for placeholder purposes
		"MMNormStyl",
		"MMNormStyl",
		"MMNormStyl"
	};
	// the same thing, but for bug style
	static const name BugElementTranslations[] =
	{
		"MMBugStyl_Null",
		"MMBugStyl_Heat",
		"MMBugStyl_Wood",
		"MMBugStyl_Elec",
		"MMBugStyl_Aqua",
		"MMBugStyl_Grnd",
		"MMBugStyl_Pois",
		"MMBugStyl_YouGoi"
	};
	// An enum where each number corresponds to a type of style
	enum StyleTypeValues
	{
		Style_None,
		Style_Guts,
		Style_Custom,
		Style_Team,
		Style_Shield,
		Style_Hub,
		Style_Ground,
		Style_Shadow,
		Style_Bug
	}
	Default
	{
		NetNaviPlayer.EmotionFace "MMFAC";
		Player.DisplayName "MegaMan";
		Player.StartItem "MegaBuster";
		Player.WeaponSlot 1, "MegaBuster";
		Player.SoundClass "megaman";
		Player.Portrait "MEGAFAC1";
	}
	States
	{
		Spawn:
			BMEG A -1 A_SetTranslucent(1.00);
			Loop;
		See:
			BMEG BCDEFG 5;
			Loop;
		See.Run:
			BMEG BCDEFG 3;
			Loop;
		Missile:
			BMEG H 2;
			BMEG IJ 2 Bright;
			BMEG H 1;
			Goto Spawn;
		Pain:
			BMEG K 3 Bright;
			BMEG L 3 A_Pain;
			BMEG M 3;
			Goto Spawn;
		Death:
			BMEG N 7;
			BMEG O 7 A_NoBlocking;
			BMEG P 2 Bright;
			BMEG O 2;
			BMEG P 2 Bright;
			BMEG O 2;
			BMEG P 2 Bright;
			BMEG O 30 A_SpawnItem("BN6DeathEffect", 0, 27, 0); // I had to make this an object instead of an overlay because overlays just... weren't working.
			BMEG P 10 Bright A_PlayerScream;
			BMEG P 3 Bright A_SetTranslucent(0.90);
			BMEG P 3 Bright A_SetTranslucent(0.80);
			BMEG P 3 Bright A_SetTranslucent(0.70);
			BMEG P 3 Bright A_SetTranslucent(0.60);
			BMEG P 3 Bright A_SetTranslucent(0.50);
			BMEG P 3 Bright A_SetTranslucent(0.40);
			BMEG P 3 Bright A_SetTranslucent(0.30);
			BMEG P 3 Bright A_SetTranslucent(0.20);
			BMEG P 3 Bright A_SetTranslucent(0.10);
			BMEG P 3 Bright A_SetTranslucent(0.00);
			TNT1 A -1;
			Stop;
	}
}

class ShanghaiPlayer : NetNaviPlayer
{
	static const name ElementTranslations[] =
	{
		"SHNormStyl",
		"SHHeatStyl",
		"SHWoodStyl",
		"SHElecStyl",
		"SHAquaStyl",
		"SHGrndStyl",
		"SHPoisStyl",
		"SHNormStyl"
	};
	// An enum where each number corresponds to a type of style
	enum StyleTypeValues
	{
		Style_None,
		Style_Doctor,
		Style_Fighter,
		Style_Gaia,
		Style_Shinobi,
		Style_Wing,
		Style_Witch
	}
	Default
	{
		NetNaviPlayer.EmotionFace "SHFAC";
		Player.DisplayName "Shanghai";
		Player.StartItem "ShanghaiBuster";
		Player.WeaponSlot 1, "ShanghaiBuster";
		Player.SoundClass "shanghai";
		Player.Portrait "SHNGFAC1";
	}
	States
	{
		Spawn:
			SHNG A -1 A_SetTranslucent(1.00);
			Loop;
		See:
			SHNG BCDEFG 5;
			Loop;
		See.Run:
			SHNG BCDEFG 3;
			Loop;
		Missile:
			SHNG H 2;
			SHNG IJ 2 Bright;
			SHNG H 1;
			Goto Spawn;
		Pain:
			SHNG K 3 Bright;
			SHNG L 3 A_Pain;
			SHNG M 3;
			Goto Spawn;
		Death:
			SHNG N 7;
			SHNG O 7 A_NoBlocking;
			SHNG P 2 Bright;
			SHNG O 2;
			SHNG P 2 Bright;
			SHNG O 2;
			SHNG P 2 Bright;
			SHNG O 30 A_SpawnItem("BN6DeathEffect", 0, 27, 0); // I had to make this an object instead of an overlay because overlays just... weren't working.
			SHNG P 10 Bright A_PlayerScream;
			SHNG P 3 Bright A_SetTranslucent(0.90);
			SHNG P 3 Bright A_SetTranslucent(0.80);
			SHNG P 3 Bright A_SetTranslucent(0.70);
			SHNG P 3 Bright A_SetTranslucent(0.60);
			SHNG P 3 Bright A_SetTranslucent(0.50);
			SHNG P 3 Bright A_SetTranslucent(0.40);
			SHNG P 3 Bright A_SetTranslucent(0.30);
			SHNG P 3 Bright A_SetTranslucent(0.20);
			SHNG P 3 Bright A_SetTranslucent(0.10);
			SHNG P 3 Bright A_SetTranslucent(0.00);
			TNT1 A -1;
			Stop;
	}
}

class BN6DeathEffect : Actor
{
	Default
	{
		Mass 0;
		Gravity 0;
		+NOBLOCKMAP
		+NOGRAVITY
		+DONTFALL
	}
	States
	{
		Spawn:
			BNDE ABCDEFGHIJK 1 Bright;
			BNDE LMNOPQRSTUV 1 Bright;
			Stop;
	}
}