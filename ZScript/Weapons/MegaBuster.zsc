class MegaBuster : BusterBase
{
	action void A_SetElementTranslation(int flags = 0) 
	{
		// Cast and null-check the class:
		let mman = MegaManPlayer(self);
		if (!mman)
			return;
		
		if (mman.curStyleType == MegaManPlayer.Style_Bug)
		{
			A_OverlayTranslation(OverlayID(), MegaManPlayer.BugElementTranslations[mman.curElement]);
			return;
		}
		
		if (mman.curStyleType == MegaManPlayer.Style_Hub) 
		{
			A_OverlayTranslation(OverlayID(), "MMHubStyl"); // Set translation
			return;
		}
		
		A_OverlayTranslation(OverlayID(), MegaManPlayer.ElementTranslations[mman.curElement]);
		return;
	}
	action void A_EmotionCheck(int flags = 0)
	{
		// Cast and null-check the class:
		let mman = MegaManPlayer(self);
		if (!mman)
			return;

		switch (mman.curEmotion) {
			case MegaManPlayer.Emotion_Evil:
			{
				if (mman.curStyleType == MegaManPlayer.Style_Hub)
					break;
				else
				{
					A_OverlayTranslation(99, "DarkSoul");
					A_OverlayRenderStyle(99, STYLE_SUBTRACT);
					A_OverlayAlpha(99, 0.50);
					break;
				}
			}
			case MegaManPlayer.Emotion_FullSynchro:
			{
				A_OverlayTranslation(99, "FullSynchro");
				A_OverlayRenderStyle(99, STYLE_ADD);
				A_OverlayAlpha(99, 0.25);
				break;
			}
			default:
				break;
		}
	}
	action void A_FireChargeShot(int flags = 0)
	{
		// Cast and null-check the class:
		let mman = MegaManPlayer(self);
		if (!mman)
			return;

		if (mman.curStyleType == MegaManPlayer.Style_Team)
		{
			A_StartSound("weapons/sword");
			player.SetPSprite(OverlayID(), ResolveState("SwordSwing"));
			player.SetPSprite(PSP_FLASH, ResolveState("SwordBlade"));
			A_OverlayTranslation(PSP_FLASH, "ProtoSword");
			return;
		}
		switch (mman.curElement) {
			case MegaManPlayer.Elem_Heat:
			{
				A_FireProjectile("MaxChargeBusterTracer", frandom(-1.425, 1.425), 0, 4, 0, 0, frandom(-1.425, 1.425));
				A_StartSound("weapons/buster/pew", CHAN_WEAPON);
				A_Overlay(PSP_FLASH, "Flash");	// Flash layer
				break;
			}
			case MegaManPlayer.Elem_Wood:
			{
				A_FireProjectile("MaxChargeBusterTracer", frandom(-1.425, 1.425), 0, 4, 0, 0, frandom(-1.425, 1.425));
				A_StartSound("weapons/buster/pew", CHAN_WEAPON);
				A_Overlay(PSP_FLASH, "Flash");	// Flash layer
				break;
			}
			case MegaManPlayer.Elem_Electric:
			{
				A_FireProjectile("ZapRing1");
				A_StartSound("weapons/groundwave");
				player.SetPSprite(OverlayID(), ResolveState("Arm"));
				player.SetPSprite(PSP_FLASH, ResolveState("ZapRingFire"));
				break;
			}
			case MegaManPlayer.Elem_Aqua:
			{
				A_FireProjectile("MaxChargeBusterTracer", frandom(-1.425, 1.425), 0, 4, 0, 0, frandom(-1.425, 1.425));
				A_StartSound("weapons/buster/pew", CHAN_WEAPON);
				A_Overlay(PSP_FLASH, "Flash");	// Flash layer
				break;
			}
			case MegaManPlayer.Elem_Ground:
			{
				A_FireProjectile("MaxChargeBusterTracer", frandom(-1.425, 1.425), 0, 4, 0, 0, frandom(-1.425, 1.425));
				A_StartSound("weapons/buster/pew", CHAN_WEAPON);
				A_Overlay(PSP_FLASH, "Flash");	// Flash layer
				break;
			}
			case MegaManPlayer.Elem_Poison:
			{
				A_FireProjectile("MaxChargeBusterTracer", frandom(-1.425, 1.425), 0, 4, 0, 0, frandom(-1.425, 1.425));
				A_StartSound("weapons/buster/pew", CHAN_WEAPON);
				A_Overlay(PSP_FLASH, "Flash");	// Flash layer
				break;
			}
			default:
			{
				A_FireProjectile("MaxChargeBusterTracer", frandom(-1.425, 1.425), 0, 4, 0, 0, frandom(-1.425, 1.425));
				A_StartSound("weapons/buster/pew", CHAN_WEAPON);
				A_Overlay(PSP_FLASH, "Flash");	// Flash layer
				break;
			}
		}
		return;
	}
	Default
	{
		Tag "MegaBuster";
	}
	States
	{
		Ready:
			NBST A 1 {
				A_WeaponReady(WRF_ALLOWZOOM|WRF_ALLOWRELOAD);
				A_SetElementTranslation();
			}
			Loop;
		Select:
			TNT1 A 0 A_Overlay(99,"LayerChecker");
			TNT1 A 0 A_SetElementTranslation();	// Set translation
			NBST A 1 A_Raise;
			Loop;
		Fire:
			NBST A 0 {
				A_OverlayFlags(5, PSPF_POWDOUBLE|PSPF_CVARFAST, true);
				A_OverlayFlags(-1, PSPF_POWDOUBLE|PSPF_CVARFAST, true);
				A_Overlay(5,"ChargeSoundFunction"); //Starts charge sound.
				A_Overlay(-1, "ChargeEffectFunction"); // starts charge effect
			}
			Charge:
				NBST A 1 A_GiveInventory("PrimaryCharge", 1);
				NBST A 0 A_Refire("Charge");
				NBST A 0 A_JumpIfInventory("PrimaryCharge", 100, "FireChargeShot");
				NBST A 0 A_JumpIfInventory("PrimaryCharge", 50, "FireMidChargeShot");
				Goto FireNormalShot;
		FireChargeShot:
			NBST A 1 {
				A_SetInventory("PrimaryCharge", 0);
				A_GiveInventory("Firing", 1);
			}
			NBST B 1 Bright A_FireChargeShot;
			Goto Fired;

		Flash:
			BSFL ABCD 1 Bright A_SetElementTranslation;
			Stop;

		Zoom:
			NBST A 10 {
				// Cast and null-check the class:
				let mman = MegaManPlayer(self);
				if (mman) {
					switch (mman.curElement) {
						case MegaManPlayer.Elem_Extra:
						{
							mman.curElement = MegaManPlayer.Elem_Normal;
							break;
						}
						default:
						{
							mman.curElement++;
							break;
						}
					}
				}
			}
			Goto Ready;
		Reload:
			NBST A 10 {
				// Cast and null-check the class:
				let mman = MegaManPlayer(self);
				if (mman) {
					switch (mman.curStyleType) {
						case MegaManPlayer.Style_Bug:
						{
							mman.curStyleType = MegaManPlayer.Style_None;
							break;
						}
						default:
						{
							mman.curStyleType++;
							break;
						}
					}
				}
			}
			Goto Ready;
	}
}