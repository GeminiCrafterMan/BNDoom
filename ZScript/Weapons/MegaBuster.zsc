//FLAGS
class PrimaryCharge : Inventory {Default {Inventory.MaxAmount 100;}}
class Firing : Inventory {Default {Inventory.MaxAmount 1;}}
//STATES
class FullSynchro : Inventory {Default {Inventory.MaxAmount 1;}}
class DarkSoul : Inventory {Default {Inventory.MaxAmount 1;}}
//STYLE ELEMENT
class HeatElement : Inventory {Default {Inventory.MaxAmount 1;}}
class AquaElement : Inventory {Default {Inventory.MaxAmount 1;}}
class ElecElement : Inventory {Default {Inventory.MaxAmount 1;}}
class WoodElement : Inventory {Default {Inventory.MaxAmount 1;}}
//STYLE CHANGE
class HubStyle : Inventory {Default {Inventory.MaxAmount 1;}}
class BugStyle : Inventory {Default {Inventory.MaxAmount 1;}}

class MegaBuster : Weapon
{
	Default
	{
		Weapon.SelectionOrder 3700;
		Obituary "Test obituary: %o killed %k.";
		+WEAPON.WIMPY_WEAPON;
		Inventory.Pickupmessage "You shouldn't be seeing this.";
		Tag "MegaBuster";
//		AttackSound "weapons/buster/pew";
	}
	States
	{
		Ready:
			NBST A 1 A_WeaponReady;
			TNT1 A 0 A_JumpIfInventory("BugStyle",1,"StyleBug");
			TNT1 A 0 A_Jumpifinventory("HubStyle",1,"StyleHub");
			TNT1 A 0 A_Jumpifinventory("HeatElement",1,"StyleHeat");
			TNT1 A 0 A_Jumpifinventory("AquaElement",1,"StyleAqua");
			TNT1 A 0 A_Jumpifinventory("ElecElement",1,"StyleElec");
			TNT1 A 0 A_Jumpifinventory("WoodElement",1,"StyleWood");
			TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMNormStyl");	// Set translation
			Loop;
			
			StyleHeat:
			TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMHeatStyl");	// Set translation
			goto Ready;
			StyleAqua:
			TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMAquaStyl");	// Set translation
			goto Ready;
			StyleElec:
			TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMElecStyl");	// Set translation
			goto Ready;
			StyleWood:
			TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMWoodStyl");	// Set translation
			goto Ready;
			StyleHub:
			TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMHubStyl");	// Set translation
			goto Ready;
			StyleBug:
				TNT1 A 0 A_Jumpifinventory("HeatElement",1,"HeatBug");
				TNT1 A 0 A_Jumpifinventory("AquaElement",1,"AquaBug");
				TNT1 A 0 A_Jumpifinventory("ElecElement",1,"ElecBug");
				TNT1 A 0 A_Jumpifinventory("WoodElement",1,"WoodBug");
				TNT1 A 0 A_JumpIfInventory("GrndElement",1,"GrndBug");
				TNT1 A 0 A_JumpIfInventory("PoisElement",1,"PoisBug");
				TNT1 A 0 A_JumpIfInventory("HubStyle",1,"YouGoiBug");
				NullBug:
					TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMBugStyl_Null");
					Goto Ready;
				HeatBug:
					TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMBugStyl_Heat");
					Goto Ready;
				AquaBug:
					TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMBugStyl_Aqua");
					Goto Ready;
				ElecBug:
					TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMBugStyl_Elec");
					Goto Ready;
				WoodBug:
					TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMBugStyl_Wood");
					Goto Ready;
				GrndBug:
					TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMBugStyl_Grnd");
					Goto Ready;
				PoisBug:
					TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMBugStyl_Pois");
					Goto Ready;
				YouGoiBug: // joke bug style element, probably will not happen... unless?
					TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMBugStyl_YouGoi");
					Goto Ready;
			
		Deselect:
			NBST A 1 A_Lower;
			Loop;
		Select:
			TNT1 A 0 A_Overlay(99,"LayerChecker");
			TNT1 A 0 A_OverlayTranslation(OverlayID(), "MMNormStyl");	// Set translation
			NBST A 1 A_Raise;
			Loop;
		Fire:
			NBST A 0 {
				A_OverlayFlags(5, PSPF_POWDOUBLE|PSPF_CVARFAST, true);
				A_OverlayFlags(-1, PSPF_POWDOUBLE|PSPF_CVARFAST, true);
				A_Overlay(5,"ChargeSoundFunction"); //Starts charge sound.
				A_Overlay(-1, "ChargeEffectFunction"); // starts charge effect
			}
			Charge:
			NBST A 1 A_GiveInventory("PrimaryCharge", 1);
			NBST A 0 A_Refire("Charge");
			NBST A 0 A_JumpIfInventory("PrimaryCharge", 100, "FireChargeShot");
			NBST A 0 A_JumpIfInventory("PrimaryCharge", 50, "FireMidChargeShot");
			Goto FireNormalShot;
		AltFire:
		FireNormalShot:
			NBST A 1 A_SetInventory("PrimaryCharge", 0);
			NBST A 0 A_GiveInventory("Firing", 1);
			NBST B 1 Bright {
				A_FireProjectile("UnchargedBusterTracer", frandom(-1.425, 1.425), 0, 4, 0, 0, frandom(-1.425, 1.425));
				A_PlaySound("weapons/buster/pew", CHAN_WEAPON);
			}
			Fired:
			NBST A 0 {
				A_Overlay(5,"ChargeSoundFunction"); //Starts charge sound.
				A_Overlay(-1, "ChargeEffectFunction"); // starts charge effect
				A_TakeInventory("Firing", 1);
			}
			NBST C 1 Bright;
			NBST D 1 Bright;
			NBST E 1;
			Goto Ready;
		FireMidChargeShot:
			NBST A 1 A_SetInventory("PrimaryCharge", 0);
			NBST A 0 A_GiveInventory("Firing", 1);
			NBST B 1 Bright {
				A_FireProjectile("MidChargeBusterTracer", frandom(-1.425, 1.425), 0, 4, 0, 0, frandom(-1.425, 1.425));
				A_PlaySound("weapons/buster/pew", CHAN_WEAPON);
			}
			Goto Fired;
		FireChargeShot:
			NBST A 1 A_SetInventory("PrimaryCharge", 0);
			NBST A 0 A_GiveInventory("Firing", 1);
			NBST A 0 A_JumpIfInventory("ElecElement", 1, "FireThunder");
			NBST B 1 Bright {
				A_FireProjectile("MaxChargeBusterTracer", frandom(-1.425, 1.425), 0, 4, 0, 0, frandom(-1.425, 1.425));
				A_PlaySound("weapons/buster/pew", CHAN_WEAPON);
			}
			Goto Fired;
		Spawn:
			SHTG A -1;
			Stop;
			
			//Subroutine for charge sound
		ChargeSoundFunction:
			TNT1 A 1;
			//If charge is full, don't play any sound
			TNT1 A 0 A_JumpIfInventory("PrimaryCharge",100,"ChargeSoundFunction");
			//Upon reaching 99 charge, play the charged sound
			TNT1 A 0 A_JumpIfInventory("PrimaryCharge",99,"ChargeSound2");
			//With 5 or more, stay silent.
			TNT1 A 0 A_JumpIfInventory("PrimaryCharge",4,"ChargeSoundFunction");
			//Upon reaching 3 charge, play chargesound1
			TNT1 A 0 A_JumpIfInventory("PrimaryCharge",3,"ChargeSound1");
			//If there's any charge, restart.
			TNT1 A 0 A_JumpIfInventory("PrimaryCharge",1,"ChargeSoundFunction");
			stop;
			
			ChargeSound1:
				TNT1 A 0 A_PlaySound("weapons/buster/charging", CHAN_WEAPON);
				goto ChargeSoundFunction;
			
			ChargeSound2:
				TNT1 A 0 A_PlaySound("weapons/buster/charged", CHAN_WEAPON);
				goto ChargeSoundFunction;
		
			// Subroutine for charge effect
		ChargeEffectFunction:
			TNT1 A 1;
			// if charge is full, play fully-charged animation
			TNT1 A 0 A_JumpIfInventory("PrimaryCharge",100,"FullChargeAnim");
			// if charge is half, play half-charged animation
			TNT1 A 0 A_JumpIfInventory("PrimaryCharge",50,"HalfChargeAnim");
			// if charge is starting, play not-charged animation
			TNT1 A 0 A_JumpIfInventory("PrimaryCharge",1,"StartChargeAnim");
			stop;

			FullChargeAnim:
				BCH0 UV 1 Bright;
				BCH0 W 2 Bright;
				BCH0 XY 1 Bright;
				BCH0 Z 2 Bright;
				BCH1 AB 1 Bright;
				BCH1 C 2 Bright;
				BCH1 DE 1 Bright;
				BCH1 F 2 Bright;
				goto ChargeEffectFunction;

			HalfChargeAnim:
				BCH0 IJ 1 Bright;
				BCH0 K 2 Bright;
				BCH0 LM 1 Bright;
				BCH0 N 2 Bright;
				BCH0 OP 1 Bright;
				BCH0 Q 2 Bright;
				BCH0 RS 1 Bright;
				BCH0 T 2 Bright;
				goto ChargeEffectFunction;

			StartChargeAnim:
				BCH0 ABCDEFGH 2 Bright;
				goto ChargeEffectFunction;
		
		LayerChecker:
			TNT1 A 0 A_OverlayFlags(99, PSPF_ALPHA|PSPF_RENDERSTYLE, true);
			TNT1 A 0 A_Jumpif(Countinv("DarkSoul"),"DarkSoulLayer");
			TNT1 A 0 A_Jumpif(Countinv("FullSynchro"),"FullSynchroLayer");
			TNT1 A 1;
			loop;
			
		DarkSoulLayer:
			NBST A 0 {
					A_OverlayTranslation(99, "DarkSoul");
					A_OverlayRenderStyle(99, STYLE_SUBTRACT);
					A_OverlayAlpha(99, 0.50);
					A_TakeInventory("FullSynchro", 1);
			}
		goto TopLayer;
		
		FullSynchroLayer:
			NBST A 0 {
					A_OverlayTranslation(99, "FullSynchro");
					A_OverlayRenderStyle(99, STYLE_ADD);
					A_OverlayAlpha(99, 0.25);
			}
			
		TopLayer:
			NBST A 1 A_JumpIfInventory("Firing",1,"LayerFire");
			NBST A 0 A_JumpIfInventory("DarkSoul",1,"DarkSoulLayer");
			NBST A 0 A_JumpIfInventory("FullSynchro",1,"FullSynchroLayer");
			goto LayerChecker;
		
		LayerFire:
			NBST BCDE 1;
			goto TopLayer;

		FireThunder:
			NBST B 1 Bright {
				A_FireProjectile("ThunderBall");
				A_PlaySound("weapons/thunder", CHAN_WEAPON);
			}
			Goto Fired;
	}
}